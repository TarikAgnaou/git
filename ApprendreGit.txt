repository : dépôt

https://git-scm.com

click droit dans explorer "git bash here"

git init
git --version

git config --global user.name "TarikAgnaou" 
git config --global user.email "tarik@t-knix.be"
=> en mode general, en retirant --global c est seulement pour le repo en cours

git status => changement depuis le dernier le dernier commit
git add => tracker les fichiers
	git add .
	git add <file>
git commit => valider le add
	git commit -m "commentaire"
git restore <file> ou git checkout -- <file>=> ne prend pas en charge le fichier

remote: machine a distance (pc collegue, serveur, etc...)

voir toute les commandes : https://git-scm.com/doc

git pull => va chercher les modifications sur le serveur
git push => envois vers le serveur
git fetch => va voir les changements avec le serveur
git clone => clone a partir du serveur
	git clone <url>
	
branche : univers paralléle
merge : rassemble 2 branches à un point donné
rebase : rassemble 2 branches à tout point

git branch <maBranche> => créé une nouvelle branche
	git branch => montre toute les branches
	git branch -d <branche> => supprime si la branche a ete merge
	git branch -D <branche> => supprime meme si le merge n a pas ete fait
	
git checkout <maBranche> => passer sur la branche
git checkout -b <maBranche> => créer et passer sur la branche
git merge <maBranche> => merge la branche

git flow : methode d organisation
faire des commit seulement si les versions sont opérationnels
	Master
	Develop
	Feature
	release
	hotfixe
	
git push --set-upstream origin develop
	
git flow init
git flow feature start <myFeature>
git flow feature finish
git flow release start <myRelease>
git flow release finish

git flow feature publish
git flow release publish
git flow develop publish

outils graphiques pour intéragir avec Git
	Interne
		Git GUI here (cick droit souris dans explorer)
	Externe
		sublime merge
		git kraken
		sourcetree

git est prevu pour des fichier "texte"
Pour travailler avec des fichiers binaire
	git-lfs.github.com
	
